"""
Django settings for basic_configuration project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/
1570035295418200523859
For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import pymysql
pymysql.version_info = (1, 4, 6, 'final', 0)
pymysql.install_as_MySQLdb()

# 邮箱配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = False   #是否使用TLS安全传输协议(用于在两个通信应用程序之间提供保密性和数据完整性。)
EMAIL_USE_SSL = False    #是否使用SSL加密，qq企业邮箱要求使用
EMAIL_HOST = 'smtp.163.com'   #发送邮件的邮箱 的 SMTP服务器，这里用了163邮箱
EMAIL_PORT = 25     #发件箱的SMTP服务器端口
EMAIL_HOST_USER = '18569432458@163.com'    #发送邮件的邮箱地址
EMAIL_HOST_PASSWORD = 'SMSRDEQCIUKYODOR'   #发送邮件的邮箱密码(这里使用的是授权码)
# ==============================
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

RUN_MODE = os.getenv('RUN_MODE', 'DEV')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'w34c9nnr_5dw%e1f7qwgk62*8po^s88lf_r!_0*%d2fr3w6_zk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s,%(process)d,%(name)s,%(levelname)s,%(filename)s:%(lineno)d,%(message)s'
        },
    },
    'filters': {
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
            # 'filters': ['special'],
        },
        'default': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(os.path.curdir, 'all.log'),
            'maxBytes': 1024 * 1024 * 50,  # 50 MB
            'backupCount': 5,
            'formatter': 'standard',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['default', 'console'] if DEBUG else ["default"],
            'level': 'ERROR',
            'propagate': False
        },
        '': {
            'handlers': ['default', 'console'] if DEBUG else ["default"],
            'level': 'DEBUG',
            'propagate': False
        },
    }
}

ALLOWED_HOSTS = ['*']

AUTH_PROFILE_MODULE = "account_system.UserProfile"
AUTH_USER_MODEL = "account_system.UserProfile"
# Application definition


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'djcelery',
    'drf_yasg2',
    'account_system',
    'automated_testing',
    'asset_information',
    'test_exe_conf',
    'system_settings',
    'zy_api_testing',
    'user_interface_test'
]


SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'basic': {
            'type': 'basic',
        }
    },
    'USE_SESSION_AUTH': True,
    'DEFAULT_AUTO_SCHEMA_CLASS': 'common.swagger.CustomSwaggerAutoSchema',  # 自定义swagger 接口分类方式
}

LOGIN_URL = 'rest_framework:login'
LOGOUT_URL = 'rest_framework:logout'


REST_FRAMEWORK = {
    'DATETIME_FORMAT': "%Y-%m-%d %H:%M:%S",
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
       'rest_framework.authentication.TokenAuthentication',
       #  "account_system.permission_exception_handler.AllowOptionsAuthentication"
    ),
    'DEFAULT_PAGINATION_CLASS': (
        'rest_framework.pagination.PageNumberPagination',
    ),
    'EXCEPTION_HANDLER': (
        'account_system.exception_handler.custom_exception_handler'
        # 'EXCEPTION_HANDLER': 'my_project.my_app.utils.custom_exception_handler'
    )
}

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "frontend/static"),
]

# STATIC_ROOT = os.path.join(BASE_DIR, "frontend/static")

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'account_system.middlewares.CheckAuthorMiddleware.CheckAuthorMiddleware'
]

ROOT_URLCONF = 'basic_configuration.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['frontend'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'basic_configuration.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {   # mysql配置 测试 线程池
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # 'ENGINE': 'dj_db_conn_pool.backends.mysql',
        # 连接池参数
        # POOL_SIZE 设置为0表示无限制
        # MAX_OVERFLOW 可以设置为-1表示没有溢出限制
        'POOL_OPTIONS': {
                    'POOL_SIZE': 50,
                    'MAX_OVERFLOW': 100,
        },
        'NAME': 'sph_autiomatic',
        'USER': 'root',
        'PASSWORD': 'yss123',
        'HOST': '192.168.13.206',
        'PORT': '3306',
        'OPTIONS': {
            'sql_mode': 'traditional',
        }
    }
}
# DATABASES = {   # mysql配置 生产
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'zy_auto',
#         'USER': 'root',
#         'PASSWORD': '@At110110',
#         'HOST': '192.168.0.190',
#         'PORT': '3306',
#         'OPTIONS': {
#             'sql_mode': 'traditional',
#         }
#     }
# }

REDIS_CONF = {   # redis及连接池配置 测试
    'host': '192.168.13.206',
    'port': 6379,
    'password': 'qq1362441',
    'decode_responses': True,
    'max_connections': 50,  # 最大连接数
}


# REDIS_CONF = {   # redis及连接池配置 生产
#     'host': '192.168.0.190',
#     'port': 6379,
#     'password': 'ysstech123',
#     'decode_responses': True,
#     'max_connections': 50,  # 最大连接数
# }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-Hans'

# TIME_ZONE = 'UTC'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# 跨域忽略
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    '*'
)

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)

AUTOMATED_API_TESTING_CONF = {  # api自动化测试相关配置
    'api_test_pro_path': '/root/project/new_investment_trading_system_api',               # API测试项目路径
    "api_test_env_path": '/root/project/new_investment_trading_system_api/api_test_env',  # API测试项目 虚拟环境位置
}


AUTOMATED_UI_TESTING_CONF = {  # ui自动化测试相关配置
    "ui_test_pro_path": '/root/project/new_investment_trading_system',     # UI测试项目路径
    "ui_test_env_path": "/root/project/new_investment_trading_system/ui_test_env",      # UI测试虚拟环境位置
    'webdriver_remote_ip_conf_path': '/root/project/new_investment_trading_system/common/makets.py',  # ui测试 webdriver remote 执行机ip配置文件位置
}

local_ip = '192.168.0.17:8888'  # 主机ip 测试
# local_ip = '192.168.0.190'  # 主机ip 生产
